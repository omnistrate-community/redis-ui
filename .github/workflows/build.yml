name: build

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['lts/*']
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g grunt-cli
      - run: npm install
      - run: grunt

  deploy-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        run: |
          docker buildx build . \
              --platform linux/amd64,linux/arm64,linux/arm/v7 \
              -t patrikx3/p3x-redis-ui:latest \
              -t patrikx3/p3x-redis-ui:${{ steps.package-version.outputs.current-version }} \
              --push

  package-and-release-macos:
    runs-on: macos-latest
    needs: deploy-image
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: npm install
      - name: Build and package macOS app
        run: npm run publish-macos
      - name: Create and upload release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*.dmg
            dist/*.zip
            dist/*.blockmap
            dist/*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
